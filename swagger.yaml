swagger: "2.0"
info:
  description: "This is the api for Weesner Development."
  version: "1.0.0"
  title: "Weesner Development"
  contact:
    email: "weesnerDevelopment@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "weesnerDevelopment.com"
basePath: "/"
tags:
  - name: "Tax Fetcher"
    description: "Everything you need to retrieve tax data."
  - name: "Social Security"
    description: "Everything you need to retrieve Social Security tax data."
    externalDocs:
      description: "Find out more"
      url: "https://www.irs.gov/taxtopics/tc751"
  - name: "Medicare"
    description: "Everything you need to retrieve Medicare tax data."
    externalDocs:
      description: "Find out more"
      url: "https://www.irs.gov/taxtopics/tc751"
  - name: "Tax Withholding"
    description: "Everything you need to retrieve Tax Withholding data."
    externalDocs:
      description: "Find out more"
      url: "https://www.irs.gov/pub/irs-pdf/p15.pdf"
  - name: "Federal Income Tax"
    description: "Everything you need to retrieve Federal Income Tax data."
    externalDocs:
      description: "Find out more"
      url: "https://www.irs.gov/pub/irs-pdf/p15.pdf"
  - name: "Bill Man"
    description: "Everything you need to handle Bill Man data."
  - name: "Categories"
    description: "Everything you need to retrieve category data."
  - name: "Bills"
    description: "Everything you need to retrieve bill data."
schemes:
  - "https"
paths:
  /taxFetcher/socialSecurity:
    get:
      tags:
        - "Social Security"
        - "Tax Fetcher"
      summary: "Finds all Social Security"
      operationId: "findSocialSecurity"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: array
                items:
                  $ref: "#/definitions/SocialSecurity"
        "404":
          description: "Unable to retrieve Social Security data"
          schema:
            type: object
            $ref: "#/definitions/NotFoundResponse"
    post:
      tags:
        - "Social Security"
        - "Tax Fetcher"
      summary: "Add new Social Security data"
      operationId: "addSocialSecurity"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: "body"
          description: "Social Security object that needs to be added"
          required: true
          schema:
            type: object
            properties:
              year:
                type: integer
              percent:
                type: number
              limit:
                type: integer
            required:
              - year
              - percent
              - limit
      responses:
        "201":
          description: "Successfully added Socials Security data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 201
              message:
                type: object
                $ref: '#/definitions/SocialSecurity'
        "409":
          description: "Data conflicted with something already in the database"
          schema:
            $ref: '#/definitions/ConflictResponse'
    put:
      tags:
        - "Social Security"
        - "Tax Fetcher"
      summary: "Update existing Social Security data"
      operationId: "updateSocialSecurity"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: "body"
          description: "Social Security data that needs to be updated"
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
              year:
                type: integer
              percent:
                type: number
              limit:
                type: integer
            required:
              - id
      responses:
        "200":
          description: "Successfully updated Social Security data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: object
                $ref: '#/definitions/SocialSecurity'
        "404":
          description: "Social Security data not found"
          schema:
            $ref: '#/definitions/NotFoundResponse'
  /taxFetcher/socialSecurity/{year}:
    get:
      tags:
        - "Social Security"
        - "Tax Fetcher"
      summary: "Get Social Security data for the year"
      operationId: "getSocialSecurityYear"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: "year"
          description: "Year of data to get"
          required: true
          type: integer
      responses:
        "200":
          description: "Successfully retrieved data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: object
                $ref: '#/definitions/SocialSecurity'
        "400":
          description: "Invalid data supplied"
          schema:
            type: object
            $ref: '#/definitions/BadRequestResponse'
        "404":
          description: "Data not found"
          schema:
            type: object
            $ref: '#/definitions/NotFoundResponse'
    delete:
      tags:
        - "Social Security"
        - "Tax Fetcher"
      summary: "Deletes Social Security data for the year"
      operationId: "deleteSocialSecurity"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: "year"
          description: "Year of data to delete"
          required: true
          type: integer
      responses:
        "200":
          description: "Successfully deleted data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
        "400":
          description: "Invalid data supplied"
          schema:
            type: object
            $ref: '#/definitions/BadRequestResponse'
        "404":
          description: "Data not found"
          schema:
            type: object
            $ref: '#/definitions/NotFoundResponse'
  /taxFetcher/medicare:
    get:
      tags:
        - "Medicare"
        - "Tax Fetcher"
      summary: "Finds all Medicare"
      operationId: "findMedicare"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: array
                items:
                  $ref: "#/definitions/Medicare"
        "404":
          description: "Unable to retrieve Medicare data"
          schema:
            type: object
            $ref: "#/definitions/NotFoundResponse"
    post:
      tags:
        - "Medicare"
        - "Tax Fetcher"
      summary: "Add new Medicare data"
      operationId: "addMedicare"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: "body"
          description: "Medicare object that needs to be added"
          required: true
          schema:
            type: object
            properties:
              year:
                type: integer
              percent:
                type: number
              additionalPercent:
                type: number
              limits:
                type: array
                $ref: '#/definitions/MedicareLimit'
            required:
              - additionalPercent
              - limits
              - percent
              - year
      responses:
        "201":
          description: "Successfully added Medicare data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 201
              message:
                type: object
                $ref: '#/definitions/Medicare'
        "409":
          description: "Data conflicted with something already in the database"
          schema:
            $ref: '#/definitions/ConflictResponse'
    put:
      tags:
        - "Medicare"
        - "Tax Fetcher"
      summary: "Update existing Medicare data"
      operationId: "updateMedicare"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: "body"
          description: "Medicare data that needs to be updated"
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
              year:
                type: integer
              percent:
                type: number
              additionalPercent:
                type: number
              limits:
                type: array
                $ref: '#/definitions/MedicareLimit'
            required:
              - id
      responses:
        "200":
          description: "Successfully updated Medicare data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: object
                $ref: '#/definitions/Medicare'
        "404":
          description: "Medicare data not found"
          schema:
            $ref: '#/definitions/NotFoundResponse'
  /taxFetcher/medicare/{year}:
    get:
      tags:
        - "Medicare"
        - "Tax Fetcher"
      summary: "Get Medicare data for the year"
      operationId: "getMedicareYear"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: "year"
          description: "Year of data to get"
          required: true
          type: integer
      responses:
        "200":
          description: "Successfully retrieved data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: object
                $ref: '#/definitions/Medicare'
        "400":
          description: "Invalid data supplied"
          schema:
            type: object
            $ref: '#/definitions/BadRequestResponse'
        "404":
          description: "Data not found"
          schema:
            type: object
            $ref: '#/definitions/NotFoundResponse'
    delete:
      tags:
        - "Medicare"
        - "Tax Fetcher"
      summary: "Deletes Medicare data for the year"
      operationId: "deleteMedicare"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: "year"
          description: "Year of data to delete"
          required: true
          type: integer
      responses:
        "200":
          description: "Successfully deleted data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
        "400":
          description: "Invalid data supplied"
          schema:
            type: object
            $ref: '#/definitions/BadRequestResponse'
        "404":
          description: "Data not found"
          schema:
            type: object
            $ref: '#/definitions/NotFoundResponse'
  /taxFetcher/taxWithholding:
    get:
      tags:
        - "Tax Withholding"
        - "Tax Fetcher"
      summary: "Finds all Tax Withholding"
      operationId: "findTaxWithholding"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: array
                items:
                  $ref: "#/definitions/TaxWithholding"
        "404":
          description: "Unable to retrieve Tax Withholding data"
          schema:
            type: object
            $ref: "#/definitions/NotFoundResponse"
    post:
      tags:
        - "Tax Withholding"
        - "Tax Fetcher"
      summary: "Add new Tax Withholding data"
      operationId: "addTaxWithholding"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: "body"
          description: "Tax Withholding object that needs to be added"
          required: true
          schema:
            type: object
            properties:
              year:
                type: integer
              type:
                type: string
                enum:
                  - General
                  - NonResident
              payPeriod:
                type: string
                $ref: '#/definitions/PayPeriod'
              amount:
                type: number
            required:
              - year
              - type
              - amount
              - payPeriod
      responses:
        "201":
          description: "Successfully added Tax Withholding data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 201
              message:
                type: object
                $ref: '#/definitions/TaxWithholding'
        "409":
          description: "Data conflicted with something already in the database"
          schema:
            $ref: '#/definitions/ConflictResponse'
    put:
      tags:
        - "Tax Withholding"
        - "Tax Fetcher"
      summary: "Update existing Tax Withholding data"
      operationId: "updateTaxWithholding"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: "body"
          description: "Tax Withholding data that needs to be updated"
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
              year:
                type: integer
              type:
                type: string
                enum:
                  - General
                  - NonResident
              payPeriod:
                type: string
                $ref: '#/definitions/PayPeriod'
              amount:
                type: number
            required:
              - id
      responses:
        "200":
          description: "Successfully updated Tax Withholding data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: object
                $ref: '#/definitions/TaxWithholding'
        "404":
          description: "Tax Withholding data not found"
          schema:
            $ref: '#/definitions/NotFoundResponse'
  /taxFetcher/taxWithholding/{year}:
    get:
      tags:
        - "Tax Withholding"
        - "Tax Fetcher"
      summary: "Get Tax Withholding data for the year"
      operationId: "getTaxWithholdingYear"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: "year"
          description: "Year of data to get"
          required: true
          type: integer
      responses:
        "200":
          description: "Successfully retrieved data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: object
                $ref: '#/definitions/TaxWithholding'
        "400":
          description: "Invalid data supplied"
          schema:
            type: object
            $ref: '#/definitions/BadRequestResponse'
        "404":
          description: "Data not found"
          schema:
            type: object
            $ref: '#/definitions/NotFoundResponse'
    delete:
      tags:
        - "Tax Withholding"
        - "Tax Fetcher"
      summary: "Deletes Tax Withholding data for the year"
      description: ""
      operationId: "deleteTaxWithholding"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: "year"
          description: "Year of data to delete"
          required: true
          type: integer
      responses:
        "200":
          description: "Successfully deleted data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
        "400":
          description: "Invalid data supplied"
          schema:
            type: object
            $ref: '#/definitions/BadRequestResponse'
        "404":
          description: "Data not found"
          schema:
            type: object
            $ref: '#/definitions/NotFoundResponse'
  /taxFetcher/federalIncomeTax:
    get:
      tags:
        - "Federal Income Tax"
        - "Tax Fetcher"
      summary: "Finds all Federal Income Tax"
      operationId: "findFederalIncomeTax"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: array
                items:
                  $ref: "#/definitions/FederalIncomeTax"
        "404":
          description: "Unable to retrieve Federal Income Tax data"
          schema:
            type: object
            $ref: "#/definitions/NotFoundResponse"
    post:
      tags:
        - "Federal Income Tax"
        - "Tax Fetcher"
      summary: "Add new Federal Income Tax data"
      operationId: "addFederalIncomeTax"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: "body"
          description: "Federal Income Tax object that needs to be added"
          required: true
          schema:
            properties:
              year:
                type: integer
              maritalStatus:
                type: string
                $ref: '#/definitions/MaritalStatus'
              payPeriod:
                type: string
                $ref: '#/definitions/PayPeriod'
              over:
                type: number
              notOver:
                type: number
              plus:
                type: number
              percent:
                type: number
              nonTaxable:
                type: number
            required:
              - payPeriod
              - year
              - percent
              - maritalStatus
              - nonTaxable
              - notOver
              - over
              - plus
      responses:
        "201":
          description: "Successfully added Federal Income Tax data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 201
              message:
                type: object
                $ref: '#/definitions/FederalIncomeTax'
        "409":
          description: "Data conflicted with something already in the database"
          schema:
            $ref: '#/definitions/ConflictResponse'
    put:
      tags:
        - "Federal Income Tax"
        - "Tax Fetcher"
      summary: "Update existing Federal Income Tax data"
      operationId: "updateFederalIncomeTax"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: "body"
          description: "Federal Income Tax data that needs to be updated"
          required: true
          schema:
            properties:
              id:
                type: integer
              year:
                type: integer
              maritalStatus:
                type: string
                $ref: '#/definitions/MaritalStatus'
              payPeriod:
                type: string
                $ref: '#/definitions/PayPeriod'
              over:
                type: number
              notOver:
                type: number
              plus:
                type: number
              percent:
                type: number
              nonTaxable:
                type: number
            required:
              - id
      responses:
        "200":
          description: "Successfully updated Federal Income Tax data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: object
                $ref: '#/definitions/FederalIncomeTax'
        "404":
          description: "Federal Income Tax data not found"
          schema:
            $ref: '#/definitions/NotFoundResponse'
  /taxFetcher/federalIncomeTax/{year}:
    get:
      tags:
        - "Federal Income Tax"
        - "Tax Fetcher"
      summary: "Get Federal Income Tax data for the year"
      operationId: "getFederalIncomeTaxYear"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: "year"
          description: "Year of data to get"
          required: true
          type: integer
      responses:
        "200":
          description: "Successfully retrieved data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: object
                $ref: '#/definitions/FederalIncomeTax'
        "400":
          description: "Invalid data supplied"
          schema:
            type: object
            $ref: '#/definitions/BadRequestResponse'
        "404":
          description: "Data not found"
          schema:
            type: object
            $ref: '#/definitions/NotFoundResponse'
    delete:
      tags:
        - "Federal Income Tax"
        - "Tax Fetcher"
      summary: "Deletes Federal Income Tax data for the year"
      operationId: "deleteFederalIncomeTax"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: "year"
          description: "Year of data to delete"
          required: true
          type: integer
      responses:
        "200":
          description: "Successfully deleted data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
        "400":
          description: "Invalid data supplied"
          schema:
            type: object
            $ref: '#/definitions/BadRequestResponse'
        "404":
          description: "Data not found"
          schema:
            type: object
            $ref: '#/definitions/NotFoundResponse'
  /billMan/categories:
    get:
      tags:
        - "Categories"
        - "Bill Man"
      summary: "Finds all Categories accessible to the user"
      operationId: "findCategories"
      parameters:
        - in: query
          type: integer
          name: "category"
          required: false
          description: "The category you want to retrieve, not giving a category id will retrieve all categories"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: array
                items:
                  $ref: "#/definitions/Category"
        "404":
          description: "Unable to retrieve data"
          schema:
            type: object
            $ref: "#/definitions/NotFoundResponse"
    post:
      tags:
        - "Categories"
        - "Bill Man"
      summary: "Add new Category data"
      operationId: "addCategory"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: "body"
          description: "Category object that needs to be added"
          required: true
          schema:
            type: object
            properties:
              owner:
                type: object
                $ref: '#/definitions/User'
              name:
                type: string
            required:
              - name
              - owner
      responses:
        "201":
          description: "Successfully added Category data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 201
              message:
                type: object
                $ref: '#/definitions/Category'
        "409":
          description: "Data conflicted with something already in the database"
          schema:
            $ref: '#/definitions/ConflictResponse'
    put:
      tags:
        - "Categories"
        - "Bill Man"
      summary: "Update existing Category data"
      operationId: "updateCategory"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: "body"
          description: "Category data that needs to be updated"
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
              owner:
                type: object
                $ref: '#/definitions/User'
            required:
              - id
      responses:
        "200":
          description: "Successfully updated Category data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: object
                $ref: '#/definitions/Category'
        "404":
          description: "Medicare data not found"
          schema:
            $ref: '#/definitions/NotFoundResponse'
    delete:
      tags:
        - "Categories"
        - "Bill Man"
      summary: "Deletes Category data with the id"
      operationId: "deleteCategory"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: "category"
          description: "Id of the data to delete"
          required: true
          type: integer
      responses:
        "200":
          description: "Successfully deleted data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
        "400":
          description: "Invalid data supplied"
          schema:
            type: object
            $ref: '#/definitions/BadRequestResponse'
        "404":
          description: "Data not found"
          schema:
            type: object
            $ref: '#/definitions/NotFoundResponse'
  /billMan/bills:
    get:
      tags:
        - "Bills"
        - "Bill Man"
      summary: "Finds all Bills accessible to the user"
      operationId: "findBills"
      parameters:
        - in: query
          type: integer
          name: "bill"
          required: false
          description: "The bill you want to retrieve, not giving a bill id will retrieve all bills"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: array
                items:
                  $ref: "#/definitions/Bill"
        "404":
          description: "Unable to retrieve data"
          schema:
            type: object
            $ref: "#/definitions/NotFoundResponse"
    post:
      tags:
        - "Bills"
        - "Bill Man"
      summary: "Add new Bill data"
      operationId: "addBill"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: "body"
          description: "Bill object that needs to be added"
          required: true
          schema:
            type: object
            properties:
              owner:
                type: object
                $ref: '#/definitions/User'
              name:
                type: string
              amount:
                type: string
              varyingAmount:
                type: boolean
              payoffAmount:
                type: string
              sharedUsers:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/User'
              categories:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/Category'
              color:
                type: object
                $ref: '#/definitions/Color'
            required:
              - name
              - owner
              - amount
              - categories
              - color
              - varyingAmount
      responses:
        "201":
          description: "Successfully added Bill data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 201
              message:
                type: object
                $ref: '#/definitions/Bill'
        "409":
          description: "Data conflicted with something already in the database"
          schema:
            $ref: '#/definitions/ConflictResponse'
    put:
      tags:
        - "Bills"
        - "Bill Man"
      summary: "Update existing Bill data"
      operationId: "updateBill"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: "body"
          description: "Bill data that needs to be updated"
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
              owner:
                type: object
                $ref: '#/definitions/User'
              name:
                type: string
              amount:
                type: string
              varyingAmount:
                type: boolean
              payoffAmount:
                type: string
              sharedUsers:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/User'
              categories:
                type: array
                items:
                  type: object
                  $ref: '#/definitions/Category'
              color:
                type: object
                $ref: '#/definitions/Color'
            required:
              - id
      responses:
        "200":
          description: "Successfully updated Bill data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: object
                $ref: '#/definitions/Bill'
        "404":
          description: "Medicare data not found"
          schema:
            $ref: '#/definitions/NotFoundResponse'
    delete:
      tags:
        - "Bills"
        - "Bill Man"
      summary: "Deletes Bill data with the id"
      operationId: "deleteBill"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: "bill"
          description: "Id of the data to delete"
          required: true
          type: integer
      responses:
        "200":
          description: "Successfully deleted data"
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
        "400":
          description: "Invalid data supplied"
          schema:
            type: object
            $ref: '#/definitions/BadRequestResponse'
        "404":
          description: "Data not found"
          schema:
            type: object
            $ref: '#/definitions/NotFoundResponse'
definitions:
  GenericItem:
    type: object
    properties:
      id:
        type: integer
      dateCreated:
        type: integer
      dateUpdated:
        type: integer
  HistoryItem:
    properties:
      history:
        type: array
        items:
          $ref: "#/definitions/History"
  User:
    allOf:
      - $ref: '#/definitions/GenericItem'
      - type: object
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
      email:
        type: string
      photoUrl:
        type: string
        description: "The is the url of the photo, this is not required"
      username:
        type: string
      password:
        type: string
      history:
        type: array
        items:
          $ref: "#/definitions/History"
  SocialSecurity:
    allOf:
      - $ref: '#/definitions/GenericItem'
      - type: object
      - $ref: '#/definitions/HistoryItem'
      - type: object
    type: object
    properties:
      year:
        type: integer
      percent:
        type: number
      limit:
        type: integer
  Medicare:
    allOf:
      - $ref: '#/definitions/GenericItem'
      - type: object
      - $ref: '#/definitions/HistoryItem'
      - type: object
    type: object
    properties:
      year:
        type: integer
      percent:
        type: number
      additionalPercent:
        type: number
      limits:
        type: array
        $ref: '#/definitions/MedicareLimit'
  MedicareLimit:
    allOf:
      - $ref: '#/definitions/GenericItem'
      - type: object
    type: object
    properties:
      year:
        type: integer
      maritalStatus:
        type: string
        $ref: '#/definitions/MaritalStatus'
      amount:
        type: integer
  TaxWithholding:
    allOf:
      - $ref: '#/definitions/GenericItem'
      - type: object
      - $ref: '#/definitions/HistoryItem'
      - type: object
    type: object
    properties:
      year:
        type: integer
      type:
        type: string
        enum:
          - General
          - NonResident
      payPeriod:
        type: string
        $ref: '#/definitions/PayPeriod'
      amount:
        type: number
  FederalIncomeTax:
    allOf:
      - $ref: '#/definitions/GenericItem'
      - type: object
      - $ref: '#/definitions/HistoryItem'
      - type: object
    type: object
    properties:
      year:
        type: integer
      maritalStatus:
        type: string
        $ref: '#/definitions/MaritalStatus'
      payPeriod:
        type: string
        $ref: '#/definitions/PayPeriod'
      over:
        type: number
      notOver:
        type: number
      plus:
        type: number
      percent:
        type: number
      nonTaxable:
        type: number
  Bill:
    allOf:
      - $ref: '#/definitions/GenericItem'
      - type: object
      - $ref: '#/definitions/HistoryItem'
      - type: object
    type: object
    properties:
      owner:
        type: object
        $ref: '#/definitions/User'
      name:
        type: string
      amount:
        type: string
      varyingAmount:
        type: boolean
      payoffAmount:
        type: string
      sharedUsers:
        type: array
        items:
          type: object
          $ref: '#/definitions/User'
      categories:
        type: array
        items:
          type: object
          $ref: '#/definitions/Category'
      color:
        type: object
        $ref: '#/definitions/Color'
  Category:
    allOf:
      - $ref: '#/definitions/GenericItem'
      - type: object
      - $ref: '#/definitions/HistoryItem'
      - type: object
    type: object
    properties:
      owner:
        type: object
        $ref: '#/definitions/User'
      name:
        type: string
  Color:
    allOf:
      - $ref: '#/definitions/GenericItem'
      - type: object
      - $ref: '#/definitions/HistoryItem'
      - type: object
    type: object
    properties:
      red:
        type: integer
      green:
        type: integer
      blue:
        type: integer
      alpha:
        type: integer
  History:
    allOf:
      - $ref: '#/definitions/GenericItem'
      - type: object
    type: object
    properties:
      field:
        type: string
      oldValue:
        type: string
        description: "Can be any value type"
      newValue:
        type: string
        description: "Can be any value type"
      updatedBy:
        type: object
        $ref: '#/definitions/User'
  NotFoundResponse:
    type: object
    properties:
      status:
        type: integer
        example: 404
      message:
        type: string
  OkResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
  ConflictResponse:
    type: object
    properties:
      status:
        type: integer
        example: 409
      message:
        type: string
  BadRequestResponse:
    type: object
    properties:
      status:
        type: integer
        example: 400
      message:
        type: string
  PayPeriod:
    type: string
    enum:
      - Weekly
      - Biweekly
      - Semimonthly
      - Monthly
      - Quarterly
      - Semiannual
      - Annual
      - Daily
  MaritalStatus:
    type: string
    enum:
      - Single
      - Married
      - Separate